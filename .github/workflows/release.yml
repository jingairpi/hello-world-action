name: Release CI

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate release branch name
        id: vars
        shell: bash
        run: |
          DATE=$(date '+%m%d%y-%H%M%S')
          echo "RELEASE_BRANCH=release-${DATE}" >> $GITHUB_ENV
          echo "::set-output name=release_branch::release-${DATE}"

      - name: Create and switch to release branch
        env:
          RELEASE_BRANCH: ${{ env.RELEASE_BRANCH }}
        run: |
          git checkout -b "${RELEASE_BRANCH}"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build the action
        run: npm run build

      - name: Commit changes
        env:
          RELEASE_BRANCH: ${{ env.RELEASE_BRANCH }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -f dist/ action.yml
          git commit -m "Build for release ${GITHUB_REF_NAME}" || echo "No changes to commit"

      - name: Push changes to release branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_BRANCH: ${{ env.RELEASE_BRANCH }}
        run: |
          # Set up authentication
          git remote set-url origin "https://$GITHUB_ACTOR:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
          git push origin "${RELEASE_BRANCH}"

      - name: Create or update tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_BRANCH: ${{ env.RELEASE_BRANCH }}
        run: |
          git tag -fa "${GITHUB_REF_NAME}" -m "Release ${GITHUB_REF_NAME}"
          git push origin "${GITHUB_REF_NAME}" --force

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          fail_if_exists: false
